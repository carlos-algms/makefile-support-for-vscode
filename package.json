{
  "version": "2.1.0",
  "name": "make-task-provider",
  "publisher": "carlos-algms",
  "displayName": "Make support and task provider",
  "description": "Extension to run Makefile tasks from VS Code",
  "icon": "images/Makefile.png",
  "repository": "https://github.com/carlos-algms/vscode-make-task-provider",
  "author": {
    "name": "Carlos Gomes",
    "email": "vscode-publisher@gomescarlos.com"
  },
  "main": "./build/extension.js",
  "activationEvents": [
    "onCommand:workbench.action.tasks.runTask",
    "onCommand:make-task-provider.runTarget",
    "onView:make"
  ],
  "contributes": {
    "taskDefinitions": [
      {
        "type": "make",
        "required": [
          "targetName",
          "makeFileRelativePath"
        ],
        "properties": {
          "targetName": {
            "type": "string",
            "description": "The make target name to run. Must exist in your Makefile"
          },
          "makeFileRelativePath": {
            "type": "string",
            "description": "Relative path to the Makefile containing your targets to be executed"
          }
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "make",
          "name": "Makefile tasks",
          "icon": "images/official-gnu.svg",
          "visibility": "visible",
          "contextualTitle": "Makefile tasks"
        }
      ]
    },
    "commands": [
      {
        "command": "make-task-provider.runTarget",
        "title": "Make: Run target",
        "icon": "$(run)"
      },
      {
        "command": "make-task-provider.runTargetFromTreeView",
        "title": "Run this target",
        "icon": "$(run)"
      },
      {
        "command": "make-task-provider.openMakefile",
        "title": "Open file",
        "icon": "$(link-external)"
      },
      {
        "command": "make-task-provider.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "make-task-provider.runTargetFromTreeView",
          "when": "false"
        },
        {
          "command": "make-task-provider.refresh",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "make-task-provider.refresh",
          "when": "view == make",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "make-task-provider.openMakefile",
          "when": "view == make && viewItem == Makefile",
          "group": "navigation"
        },
        {
          "command": "make-task-provider.runTargetFromTreeView",
          "when": "view == make && viewItem == MakefileTarget",
          "group": "inline"
        },
        {
          "command": "make-task-provider.openMakefile",
          "when": "view == make && viewItem == MakefileTarget",
          "group": "inline"
        },
        {
          "command": "make-task-provider.runTargetFromTreeView",
          "when": "view == make && viewItem == MakefileTarget",
          "group": "navigation@1"
        },
        {
          "command": "make-task-provider.openMakefile",
          "when": "view == make && viewItem == MakefileTarget",
          "group": "navigation@2"
        }
      ]
    },
    "configuration": {
      "title": "Make Task Provider",
      "properties": {
        "make-task-provider.autoDetect": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Controls whether auto detection of Make tasks is on or off.\nDefault is on."
        },
        "make-task-provider.telemetry": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Enable usage data and errors to be sent to an online service.\nWe follow Microsoft's privacy statement, please, find it [here](https://go.microsoft.com/fwlink/?LinkId=786907)"
        },
        "make-task-provider.windows.makeExecutable": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "The executable path to your make command in the Windows environment. \ni.e: \"C:\\Program Files\\make\\bin\\make.exe\"\nplease use a correct path, this is just an example."
        },
        "make-task-provider.unix.makeExecutable": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "The executable path to your make command in the Unix environment.\ni.e: \"/usr/bin/make\"\nplease use a correct path, this is just an example."
        },
        "make-task-provider.osx.makeExecutable": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "The executable path to your make command in the MacOS environment.\ni.e: \"/usr/bin/make\"\nplease use a correct path, this is just an example."
        },
        "make-task-provider.makefileNames": {
          "scope": "resource",
          "type": "array",
          "default": [
            "makefile",
            "Makefile"
          ],
          "description": "A list of file names that the extension should look for while searching the workspace.\nThis allows you to have non-standard name for your file."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn lint && rm -rf build/ && yarn compile:prod",
    "compile_base": "esbuild --sourcemap --platform=node --target=node14 --external:vscode",
    "compile": "yarn compile_base src/extension.ts --bundle  --outfile=build/extension.js",
    "compile:prod": "yarn run compile --minify --define:process.env.NODE_ENV=\\\"production\\\"",
    "lint": "yarn type-check && eslint src",
    "watch": "nodemon --watch src -e ts --exec \"yarn compile\" ",
    "test": "node .temp/test/test/runTest.js",
    "pretest": "rm -rf .temp/test && yarn compile:test",
    "compile:test": "yarn compile_base `find ./src -name '*.ts'` --format=cjs --outdir='.temp/test' --define:process.env.PROJECT_FOLDER=\\\"`pwd`\\\" --define:process.env.NODE_ENV=\\\"test\\\"",
    "changelog": "npx conventional-changelog-cli --infile CHANGELOG.md --same-file",
    "version": "yarn run changelog && git add CHANGELOG.md",
    "type-check": "tsc --noEmit -p ./"
  },
  "dependencies": {},
  "devDependencies": {
    "@amplitude/node": "^1.2.0",
    "@sentry/node": "^6.0.2",
    "@types/glob": "^7.1.3",
    "@types/jest": "^27.0.1",
    "@types/node": "~14",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "@vscode/test-electron": "^1.6.2",
    "esbuild": "^0.8.36",
    "eslint": "^7.18.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^7.2.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.3.1",
    "glob": "^7.1.6",
    "jest": "^27.0.6",
    "node-machine-id": "^1.1.12",
    "nodemon": "^2.0.7",
    "prettier": "^2.2.1",
    "typescript": "^4.1.3",
    "vscode-extension-analytics": "^0.0.4"
  },
  "engines": {
    "vscode": "^1.50.0"
  },
  "categories": [
    "Other"
  ]
}
